status: true
dependencies: {  }
id: register_drupal
label: 'Register Drupal'
contract_src: "pragma solidity ^0.4.24;\r\n\r\ncontract RegisterDrupal {\r\n\r\n    // Mapping that matches Drupal generated hash with Ethereum Account address.\r\n    mapping (bytes32 => address) _accounts;\r\n\r\n    // Event allowing listening to newly signed Accounts (?)\r\n    event AccountCreated (address indexed from, bytes32 hash);\r\n\r\n    address _registryAdmin;\r\n\r\n    // Allowed to administrate accounts only, not everything\r\n    address _accountAdmin;\r\n\r\n    // If a newer version of this registry is available, force users to use it\r\n    bool _registrationDisabled;\r\n\r\n    // Register Account\r\n    function newUser(bytes32 hash) public {\r\n\r\n        if (_accounts[hash] == msg.sender) {\r\n            // Hash all ready registered to address.\r\n            revert('Hash all ready registered to address.');\r\n        }\r\n        else if (_accounts[hash] > 0) {\r\n            // Hash all ready registered to different address.\r\n            revert('Hash all ready registered to different address.');\r\n        }\r\n        else if (hash.length > 32) {\r\n            // Hash too long\r\n            revert('Hash too long.');\r\n\r\n        }\r\n        else if (_registrationDisabled){\r\n            // Registry is disabled because a newer version is available\r\n            revert('Registry is disabled because a newer version is available.');\r\n        }\r\n        else {\r\n            _accounts[hash] = msg.sender;\r\n            emit AccountCreated(msg.sender, hash);\r\n        }\r\n    }\r\n\r\n    // Validate Account\r\n    // This function is actually not necessary if you implement Event handling in PHP.\r\n    function validateUserByHash (bytes32 hash) public constant returns (address result) {\r\n        return _accounts[hash];\r\n    }\r\n\r\n    function contractExists () public pure returns (bool result){\r\n        return true;\r\n    }\r\n\r\n    // Administrative below\r\n    constructor() public {\r\n        _registryAdmin = msg.sender;\r\n        _accountAdmin = msg.sender; // can be changed later\r\n        _registrationDisabled = false;\r\n    }\r\n\r\n    function adminSetRegistrationDisabled(bool registrationDisabled) public {\r\n        // currently, the code of the registry can not be updated once it is\r\n        // deployed. if a newer version of the registry is available, account\r\n        // registration can be disabled\r\n        if (msg.sender == _registryAdmin) {\r\n            _registrationDisabled = registrationDisabled;\r\n        }\r\n    }\r\n\r\n    function adminSetAccountAdministrator(address accountAdmin) public {\r\n        if (msg.sender == _registryAdmin) {\r\n            _accountAdmin = accountAdmin;\r\n        }\r\n    }\r\n\r\n    function adminRetrieveDonations() public {\r\n        if (msg.sender == _registryAdmin) {\r\n            _registryAdmin.transfer(address(this).balance);\r\n        }\r\n    }\r\n\r\n    function adminDeleteRegistry() public {\r\n        if (msg.sender == _registryAdmin) {\r\n            selfdestruct(_registryAdmin); // this is a predefined function, it deletes the contract and returns all funds to the admin's address\r\n        }\r\n    }\r\n\r\n}"
abi: '[{"constant":true,"inputs":[],"name":"contractExists","outputs":[{"name":"result","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"name":"hash","type":"bytes32"}],"name":"validateUserByHash","outputs":[{"name":"result","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"adminRetrieveDonations","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"adminDeleteRegistry","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"accountAdmin","type":"address"}],"name":"adminSetAccountAdministrator","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"registrationDisabled","type":"bool"}],"name":"adminSetRegistrationDisabled","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"hash","type":"bytes32"}],"name":"newUser","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"hash","type":"bytes32"}],"name":"AccountCreated","type":"event"}]'
networks:
  3: '0xa0ce7d9f76dd13236dbdefd4df44f26b5a8e0d10'
  42: '0xcc99a4e99f29472c134779fbb3f9d2c37c54bdda'
  5777: '0x5ce7725cd9aa30c356e545656594050cfb079612'
  '*': '0x345ca3e014aaf5dca488057592ee47305d9b3e10'
is_imported: null
imported_file: null
