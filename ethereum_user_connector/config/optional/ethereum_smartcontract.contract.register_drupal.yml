langcode: en
status: true
dependencies: {  }
id: register_drupal
label: 'Register Drupal'
contract_src: "pragma solidity ^0.4.23;\r\n\r\ncontract RegisterDrupal {\r\n\r\n  // Mapping that matches Drupal generated hash with Ethereum Account address.\r\n  mapping (bytes16 => address) _accounts;\r\n\r\n  address _registryAdmin;\r\n\r\n  // Allowed to administrate accounts only, not everything\r\n  address _accountAdmin;\r\n\r\n  // If a newer version of this registry is available, force users to use it\r\n  bool _registrationDisabled;\r\n\r\n  // Event allowing listening to newly signed Accounts (?)\r\n  event AccountCreatedEvent (address indexed from, bytes16 indexed hash, int error);\r\n\r\n  function accountCreated(address from, bytes16 hash, int error) public {\r\n    emit AccountCreatedEvent(from, hash, error);\r\n  }\r\n\r\n  // Register Account\r\n  function newUser(bytes16 drupalUserHash) public {\r\n\r\n    if (_accounts[drupalUserHash] == msg.sender) {\r\n      // Hash allready registered to address.\r\n      accountCreated(msg.sender, drupalUserHash, 4);\r\n    }\r\n    else if (_accounts[drupalUserHash] > 0) {\r\n      // Hash allready registered to different address.\r\n      accountCreated(msg.sender, drupalUserHash, 3);\r\n    }\r\n     else if (drupalUserHash.length > 32) {\r\n      // Hash too long\r\n      accountCreated(msg.sender, drupalUserHash, 2);\r\n    }\r\n    else if (_registrationDisabled){\r\n      // Registry is disabled because a newer version is available\r\n      accountCreated(msg.sender, drupalUserHash, 1);\r\n    }\r\n    else {\r\n      _accounts[drupalUserHash] = msg.sender;\r\n      accountCreated(msg.sender, drupalUserHash, 0);\r\n    }\r\n  }\r\n\r\n  // Validate Account\r\n  function validateUserByHash (bytes16 drupalUserHash) public constant returns (address result) {\r\n      return _accounts[drupalUserHash];\r\n  }\r\n\r\n  function contractExists () public pure returns (bool result){\r\n    return true;\r\n  }\r\n\r\n  // Administrative below\r\n  constructor() public {\r\n    _registryAdmin = msg.sender;\r\n    _accountAdmin = msg.sender; // can be changed later\r\n    _registrationDisabled = false;\r\n  }\r\n\r\n  function adminSetRegistrationDisabled(bool registrationDisabled) public {\r\n    // currently, the code of the registry can not be updated once it is\r\n    // deployed. if a newer version of the registry is available, account\r\n    // registration can be disabled\r\n    if (msg.sender == _registryAdmin) {\r\n      _registrationDisabled = registrationDisabled;\r\n    }\r\n  }\r\n\r\n  function adminSetAccountAdministrator(address accountAdmin) public {\r\n    if (msg.sender == _registryAdmin) {\r\n      _accountAdmin = accountAdmin;\r\n    }\r\n  }\r\n\r\n  function adminRetrieveDonations() public {\r\n    if (msg.sender == _registryAdmin) {\r\n      _registryAdmin.transfer(address(this).balance);\r\n    }\r\n  }\r\n\r\n  function adminDeleteRegistry() public {\r\n    if (msg.sender == _registryAdmin) {\r\n      selfdestruct(_registryAdmin); // this is a predefined function, it deletes the contract and returns all funds to the admin's address\r\n    }\r\n  }\r\n\r\n}\r\n"
abi: '[{"constant":true,"inputs":[],"name":"contractExists","outputs":[{"name":"result","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"name":"drupalUserHash","type":"bytes16"}],"name":"validateUserByHash","outputs":[{"name":"result","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"adminRetrieveDonations","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"adminDeleteRegistry","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"accountAdmin","type":"address"}],"name":"adminSetAccountAdministrator","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"drupalUserHash","type":"bytes16"}],"name":"newUser","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"registrationDisabled","type":"bool"}],"name":"adminSetRegistrationDisabled","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"hash","type":"bytes16"},{"name":"error","type":"int256"}],"name":"accountCreated","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"hash","type":"bytes16"},{"indexed":false,"name":"error","type":"int256"}],"name":"AccountCreatedEvent","type":"event"}]'
networks:
  3: '0xa0ce7d9f76dd13236dbdefd4df44f26b5a8e0d10'
  42: '0xcc99a4e99f29472c134779fbb3f9d2c37c54bdda'
  5777: '0x5ce7725cd9aa30c356e545656594050cfb079612'
  '*': '0x345ca3e014aaf5dca488057592ee47305d9b3e10'
is_imported: null
imported_file: null
